name: Build and push a release

on:
  push:
    tags:
    # Although these *look* like regex matches, they're not!
    # They are Go path.Match() expressions.
    # See https://golang.org/pkg/path/#Match for details.
    - 'v[0-9]*.[0-9]*.[0-9]'
    - 'v[0-9]*.[0-9]*.[0-9][0-9]'
    - 'v[0-9]*.[0-9]*.[0-9][0-9][0-9]'
    - 'v[0-9]*.[0-9]*.[0-9]*beta*'
    - 'v[0-9]*.[0-9]*.[0-9]*alpha*'
    - 'v[0-9]*.[0-9]*.[0-9]*rc*'

permissions:
  contents: read

env:
  GOPROXY: https://proxy.golang.org/
  GO_VERSION: 1.24.2

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      with:
        version: latest
    - name: Log in to GHCR
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and Push to GHCR
      env:
        REGISTRY: ghcr.io/${{ github.repository_owner }}
        TAG_LATEST: "false"
      run: |
        ./hack/actions/build-and-push-release-images.sh
  gateway-conformance-report:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false
    - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      with:
        # * Module download cache
        # * Build cache (Linux)
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-${{ github.job }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-${{ github.job }}-go-
    - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: false
    - name: add deps to path
      run: |
        ./hack/actions/install-kubernetes-toolchain.sh $GITHUB_WORKSPACE/bin
        echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
    - name: Gateway API conformance tests
      env:
        GENERATE_GATEWAY_CONFORMANCE_REPORT: "true"
      run: |
        export CONTOUR_E2E_IMAGE="ghcr.io/projectcontour/contour:$(git describe --tags)"
        make setup-kind-cluster run-gateway-conformance cleanup-kind
    - name: Upload gateway conformance report
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: gateway-conformance-report
        path: gateway-conformance-report/projectcontour-contour-*.yaml
