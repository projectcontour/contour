name: Daily build

on:
  # Run every day
  schedule:
    - cron: '0 12 * * *'
  # Allow manual runs
  workflow_dispatch:

env:
  GOPROXY: https://proxy.golang.org/
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  GO_VERSION: 1.20.6
jobs:
  e2e-envoy-xds:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          # * Module download cache
          # * Build cache (Linux)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-${{ github.job }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.job }}-go-
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false
      - name: add deps to path
        run: |
          ./hack/actions/install-kubernetes-toolchain.sh $GITHUB_WORKSPACE/bin
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
      - name: e2e tests
        env:
          CONTOUR_E2E_IMAGE: ghcr.io/projectcontour/contour:main
          CONTOUR_E2E_XDS_SERVER_TYPE: envoy
        run: |
          make setup-kind-cluster run-e2e cleanup-kind
      - uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#contour-ci-notifications'
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
  e2e-envoy-deployment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          # * Module download cache
          # * Build cache (Linux)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-${{ github.job }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.job }}-go-
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false
      - name: add deps to path
        run: |
          ./hack/actions/install-kubernetes-toolchain.sh $GITHUB_WORKSPACE/bin
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
      - name: e2e tests
        env:
          CONTOUR_E2E_IMAGE: ghcr.io/projectcontour/contour:main
          CONTOUR_E2E_ENVOY_DEPLOYMENT_MODE: deployment
        run: |
          make setup-kind-cluster run-e2e cleanup-kind
      - uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#contour-ci-notifications'
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
  e2e-gateway-reconcile-controller:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          # * Module download cache
          # * Build cache (Linux)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-${{ github.job }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.job }}-go-
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false
      - name: add deps to path
        run: |
          ./hack/actions/install-kubernetes-toolchain.sh $GITHUB_WORKSPACE/bin
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
      - name: e2e tests
        env:
          CONTOUR_E2E_IMAGE: ghcr.io/projectcontour/contour:main
          CONTOUR_E2E_PACKAGE_FOCUS: ./test/e2e/gateway
          CONTOUR_E2E_GATEWAY_RECONCILE_MODE: controller
        run: |
          make setup-kind-cluster run-e2e cleanup-kind
      - uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#contour-ci-notifications'
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
  e2e-ipv6:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          # * Module download cache
          # * Build cache (Linux)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-${{ github.job }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.job }}-go-
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false
      - name: add deps to path
        run: |
          ./hack/actions/install-kubernetes-toolchain.sh $GITHUB_WORKSPACE/bin
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
      - name: e2e tests
        env:
          CONTOUR_E2E_IMAGE: ghcr.io/projectcontour/contour:main
          IPV6_CLUSTER: "true"
        run: |
          # Set up cluster to ensure we have a docker bridge network to find a non-local ip from.
          make setup-kind-cluster
          export CONTOUR_E2E_LOCAL_HOST=$(ifconfig | grep inet6 | grep global | head -n1 | awk '{print $2}')
          make run-e2e cleanup-kind
      - uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#contour-ci-notifications'
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
