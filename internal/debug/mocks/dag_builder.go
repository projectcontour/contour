// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	dag "github.com/projectcontour/contour/internal/dag"

	mock "github.com/stretchr/testify/mock"
)

// DagBuilder is an autogenerated mock type for the DagBuilder type
type DagBuilder struct {
	mock.Mock
}

// Build provides a mock function with given fields:
func (_m *DagBuilder) Build() *dag.DAG {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Build")
	}

	var r0 *dag.DAG
	if rf, ok := ret.Get(0).(func() *dag.DAG); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*dag.DAG)
		}
	}

	return r0
}

// NewDagBuilder creates a new instance of DagBuilder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDagBuilder(t interface {
	mock.TestingT
	Cleanup(func())
}) *DagBuilder {
	mock := &DagBuilder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
