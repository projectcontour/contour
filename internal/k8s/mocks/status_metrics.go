// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// StatusMetrics is an autogenerated mock type for the StatusMetrics type
type StatusMetrics struct {
	mock.Mock
}

// SetStatusUpdateConflict provides a mock function with given fields: kind
func (_m *StatusMetrics) SetStatusUpdateConflict(kind string) {
	_m.Called(kind)
}

// SetStatusUpdateDuration provides a mock function with given fields: duration, kind, onError
func (_m *StatusMetrics) SetStatusUpdateDuration(duration time.Duration, kind string, onError bool) {
	_m.Called(duration, kind, onError)
}

// SetStatusUpdateFailed provides a mock function with given fields: kind
func (_m *StatusMetrics) SetStatusUpdateFailed(kind string) {
	_m.Called(kind)
}

// SetStatusUpdateNoop provides a mock function with given fields: kind
func (_m *StatusMetrics) SetStatusUpdateNoop(kind string) {
	_m.Called(kind)
}

// SetStatusUpdateSuccess provides a mock function with given fields: kind
func (_m *StatusMetrics) SetStatusUpdateSuccess(kind string) {
	_m.Called(kind)
}

// SetStatusUpdateTotal provides a mock function with given fields: kind
func (_m *StatusMetrics) SetStatusUpdateTotal(kind string) {
	_m.Called(kind)
}

// NewStatusMetrics creates a new instance of StatusMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewStatusMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *StatusMetrics {
	mock := &StatusMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
